{"version":3,"sources":["styles.js","theme.js","config.js","components/Authenticate.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","container","backgroundColor","palette","background","paper","padding","spacing","logo","margin","createMuiTheme","config","clientId","redirectUri","window","location","href","includes","origin","Authenticate","useState","envType","setEnvType","setCustomUrl","loginUrl","Container","Typography","variant","align","color","gutterBottom","paragraph","Grid","justify","direction","alignItems","item","FormControl","component","FormLabel","RadioGroup","aria-label","name","value","onChange","e","target","FormControlLabel","control","Radio","label","TextField","placeholder","required","Button","App","classes","isAuth","ThemeProvider","CssBaseline","AppBar","position","Toolbar","Search","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAYeA,EAVGC,aAAW,SAACC,GAAD,MAAY,CACrCC,UAAW,CACPC,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1CC,QAASN,EAAMO,QAAQ,EAAG,EAAG,IAEjCC,KAAM,CACFC,OAAQ,a,QCGDT,EARDU,YAAe,CACzBP,QAAS,K,yFCAEQ,EAJA,CACXC,SAAU,wFACVC,YAAaC,OAAOC,SAASC,KAAKC,SAAS,aAAeH,OAAOC,SAASG,OAASJ,OAAOC,SAASC,M,OCoDxFG,MAlDf,WACI,IADoB,EAEUC,mBAAS,SAFnB,mBAEbC,EAFa,KAEJC,EAFI,OAGcF,mBAAS,IAHvB,mBAGFG,GAHE,aAIUH,mBAAS,IAJnB,gCAKYA,mBAJZ,UAIiC,+BAJjC,oEAAoFT,EAAOC,SAA3F,yBAAoHD,EAAOE,eAD3H,mBAKbW,EALa,KAcpB,OAdoB,KAehB,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASC,MAAM,cAAcC,cAAY,EAAxE,uBAGA,cAACJ,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASC,MAAM,gBAAgBE,WAAS,EAAvE,4EAGA,uBACA,8BACI,eAACC,EAAA,EAAD,CAAM/B,WAAS,EAACgC,QAAQ,SAASC,UAAU,SAASC,WAAW,SAA/D,UACI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACI,eAACC,EAAA,EAAD,CAAaC,UAAU,WAAvB,UACI,cAACC,EAAA,EAAD,CAAWD,UAAU,SAArB,iCACA,eAACE,EAAA,EAAD,CAAYC,aAAW,UAAUC,KAAK,UAAUC,MAAOtB,EAASuB,SArBhE,SAACC,GACrBvB,EAAWuB,EAAEC,OAAOH,QAoBA,UACI,cAACI,EAAA,EAAD,CAAkBJ,MAAM,QAAQK,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,yBAC1D,cAACH,EAAA,EAAD,CAAkBJ,MAAM,OAAOK,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,YACzD,cAACH,EAAA,EAAD,CAAkBJ,MAAM,SAASK,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,kBAElD,WAAZ7B,GACG,cAAC8B,EAAA,EAAD,CAAWxB,QAAQ,WAAWyB,YAAY,oBAAoBC,UAAU,EAAMT,SAxBlF,SAACC,GACrBtB,EAAasB,EAAEC,OAAOH,eA2BV,eAACX,EAAA,EAAD,CAAMI,MAAI,EAAV,UACI,uBACA,cAACkB,EAAA,EAAD,CAAQtC,KAAMQ,EAAUG,QAAQ,YAAhC,+BCPT4B,MA3Bf,WACE,IAAMC,EAAU1D,IADH,EAEesB,oBAAS,GAFxB,mBAENqC,EAFM,KAIb,OAJa,KAKX,eAACC,EAAA,EAAD,CAAe1D,MAAOA,EAAtB,UACE,cAAC2D,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,WAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,UAAWR,EAAQhD,OAC3B,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BAGJ,+BACE,iCACI8B,GACA,cAAC,EAAD,IAEDA,GACC,4DCvBZQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9745b907.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6)\n    },\n    logo: {\n        margin: '0 1em'\n    }\n}));\n\nexport default useStyles;","import { orange } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        // primary: {\n        //     main: orange[500],\n        // }\n    }\n})\n\nexport default theme;","const config = {\n    clientId: \"3MVG9Nk1FpUrSQHfKNnaUF1dVrBEebKXe8t9H.kyVVrVqQ9Ccvq7B4ay2EjXuj0.P_UjHlH7F1h7TonXqOy_p\",\n    redirectUri: window.location.href.includes('localhost') ? window.location.origin : window.location.href\n};\nexport default config;","import { useState } from 'react';\nimport { Button, Typography, Grid, Container, FormControl, Radio, RadioGroup, FormLabel, FormControlLabel, TextField } from '@material-ui/core';\nimport config from '../config';\n\nfunction Authenticate() {\n    const generateUrl = (baseUrl) => (`${baseUrl}/services/oauth2/authorize?response_type=token&client_id=${config.clientId}&redirect_uri=${config.redirectUri}`);\n    const [envType, setEnvType] = useState('login');\n    const [customUrl, setCustomUrl] = useState('');\n    const [calcUrl, setCalcUrl] = useState('');\n    const [loginUrl, setLoginUrl] = useState(generateUrl('https://login.salesforce.com'));\n\n    const handleEnvChange = (e) => {\n        setEnvType(e.target.value);\n    }\n    const customUrlChange = (e) => {\n        setCustomUrl(e.target.value);\n    }\n\n    return (\n        <Container>\n            <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                Easy SOQL\n            </Typography>\n            <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                Easily build SOQL queries against your Salesforce environments\n            </Typography>\n            <br />\n            <div>\n                <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\n                    <Grid item>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Type of environment</FormLabel>\n                            <RadioGroup aria-label=\"envType\" name=\"envType\" value={envType} onChange={handleEnvChange}>\n                                <FormControlLabel value=\"login\" control={<Radio />} label=\"Production/Developer\" />\n                                <FormControlLabel value=\"test\" control={<Radio />} label=\"Sandbox\" />\n                                <FormControlLabel value=\"custom\" control={<Radio />} label=\"Custom URL\" />\n                            </RadioGroup>\n                            {envType === 'custom' &&\n                                <TextField variant=\"standard\" placeholder=\"Domain URL here..\" required={true} onChange={customUrlChange} />\n                            }\n                        </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <br />\n                        <Button href={loginUrl} variant=\"contained\">\n                            Login\n                        </Button>\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    )\n}\n\nexport default Authenticate;","import { useState } from 'react';\nimport { Button, Typography, AppBar, Card, CardActions, CardContent, CssBaseline, Grid, Toolbar, Container } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Search } from '@material-ui/icons';\n\nimport useStyles from './styles';\nimport theme from './theme';\nimport './App.css';\nimport Authenticate from './components/Authenticate';\n\nfunction App() {\n  const classes = useStyles();\n  const [isAuth, setIsAuth] = useState(false);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <Search className={classes.logo} />\n          <Typography variant=\"h6\">Easy SOQL</Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        <div>\n          {!isAuth &&\n            <Authenticate></Authenticate>\n          }\n          {isAuth &&\n            <p>Query builder here</p>\n          }\n        </div>\n      </main>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}